{"ast":null,"code":"var _jsxFileName = \"/home/kxsalmi/School/FullStack_8_GraphQL/library-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Authors from './components/Authors';\nimport Books from './components/Books';\nimport NewBook from './components/NewBook';\nimport { gql, useQuery } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ALL_BOOKS = gql`\nquery{\n    allBooks {\n        title\n        author\n        published\n        genres\n        id\n  }\n}\n`;\nconst ALL_AUTHORS = gql`\nquery{\n    allAuthors {\n    name\n    id\n    born\n    bookCount\n  }\n}`;\nconst App = () => {\n  _s();\n  const result = useQuery(ALL_AUTHORS);\n  if (result.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: result.data.allPersons.map(p => p.name).join(', ')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"JqpwbFFyOF6wIHaj5E6obYHTpSg=\", false, function () {\n  return [useQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Authors","Books","NewBook","gql","useQuery","ALL_BOOKS","ALL_AUTHORS","App","result","loading","data","allPersons","map","p","name","join"],"sources":["/home/kxsalmi/School/FullStack_8_GraphQL/library-frontend/src/App.js"],"sourcesContent":["import { useState } from 'react'\nimport Authors from './components/Authors'\nimport Books from './components/Books'\nimport NewBook from './components/NewBook'\nimport { gql,useQuery } from \"@apollo/client\";\n\nconst ALL_BOOKS = gql`\nquery{\n    allBooks {\n        title\n        author\n        published\n        genres\n        id\n  }\n}\n`\nconst ALL_AUTHORS = gql`\nquery{\n    allAuthors {\n    name\n    id\n    born\n    bookCount\n  }\n}`\n\nconst App = () => {\n  const result = useQuery(ALL_AUTHORS)\n\n  if (result.loading)  {\n    return <div>loading...</div>\n  }\n\n  return (\n    <div>\n      {result.data.allPersons.map(p => p.name).join(', ')}\n    </div>\n  )\n  }\n\n\n\nexport default App\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,GAAG,EAACC,QAAQ,QAAQ,gBAAgB;AAAC;AAE9C,MAAMC,SAAS,GAAGF,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,MAAMG,WAAW,GAAGH,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,MAAMI,GAAG,GAAG,MAAM;EAAA;EAChB,MAAMC,MAAM,GAAGJ,QAAQ,CAACE,WAAW,CAAC;EAEpC,IAAIE,MAAM,CAACC,OAAO,EAAG;IACnB,oBAAO;MAAA,UAAK;IAAU;MAAA;MAAA;MAAA;IAAA,QAAM;EAC9B;EAEA,oBACE;IAAA,UACGD,MAAM,CAACE,IAAI,CAACC,UAAU,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAACC,IAAI,CAAC,IAAI;EAAC;IAAA;IAAA;IAAA;EAAA,QAC/C;AAER,CAAC;AAAA,GAZGR,GAAG;EAAA,QACQH,QAAQ;AAAA;AAAA,KADnBG,GAAG;AAgBT,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}